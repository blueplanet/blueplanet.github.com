<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 勉強会 | Welcome to my Blog]]></title>
  <link href="http://blueplanet.github.com/blog/categories/勉強会/atom.xml" rel="self"/>
  <link href="http://blueplanet.github.com/"/>
  <updated>2012-09-21T23:26:29+09:00</updated>
  <id>http://blueplanet.github.com/</id>
  <author>
    <name><![CDATA[blueplanet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BPStudy#55 ]]></title>
    <link href="http://blueplanet.github.com/blog/2012/03/30/bpstudy-number-55/"/>
    <updated>2012-03-30T18:50:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/03/30/bpstudy-number-55</id>
    <content type="html"><![CDATA[<p>今日ここの勉強会に行きました。適当なメモ<br/>
<a href="http://connpass.com/event/354/">BPStudy#55 Herokuに関するお話</a></p>

<h2>Python本の説明</h2>

<ul>
<li>プログラミングの話ではない</li>
<li>開発環境構築</li>
<li>チーム開発

<ul>
<li>ドキュメント管理Sphinx</li>
<li>課題管理</li>
<li>モジュール分散方法</li>
<li>CIツール</li>
<li>複数サーバのデプロイツール</li>
</ul>
</li>
<li>本番環境

<ul>
<li>Google AppEnige</li>
</ul>
</li>
</ul>


<h2>Heroku</h2>

<ul>
<li>ホスティングサーバとの違い

<ul>
<li>OSなどには全く意識しないで製品に集中する</li>
<li>生産性が高いプログラマが生産性をもっと高める為のプラットフォーム</li>
<li>Rubyとはある程度似ってる</li>
</ul>
</li>
<li>Salesforce？

<ul>
<li>顧客管理システムを売る会社</li>
<li>では、なんでHerokuを買った？</li>
</ul>
</li>
</ul>


<h3>日本のHerokuは？</h3>

<ul>
<li>Herokuを使いましょう！</li>
<li>Facebookアプリを作りましょう！</li>
<li>Herokuのアドオンを作りましょう！</li>
</ul>


<h2>SonicGardenでのherokuの実践活用</h2>

<ul>
<li>会社

<ul>
<li>SKIP 社内NSS</li>
<li>youRoom</li>
<li>Ruby x Cloud x Ajile</li>
<li>納品しない　受託開発</li>
</ul>
</li>
<li>自社の運用方法

<ul>
<li><a href="http://kuranuki.sonicgarden.jp/2012/03/post-70.html">高速で無駄のないソフトウェア開発を実現するための7つのポイント</a>

<ul>
<li><a href="http://www.pivotaltracker.com/">トラッカツール　pivotaltracker</a>　<strong>特徴：優先度ない、上からやれ！</strong></li>
<li>ドキュメントはほとんど作らない　<strong>ホワイトボードで十分</strong></li>
<li>githubのソースコードレビューが素晴らしい</li>
</ul>
</li>
<li>新規サービスのスタートアップはHerokuを使ってる</li>
<li>ステージング環境としてHerokuを使う</li>
</ul>
</li>
<li>Herokuでの課題と工夫

<ul>
<li>ログを数年保管したい　<strong>loggly addon</strong></li>
<li>復旧できないとき

<ul>
<li>PG Backups addonを利用</li>
<li>DBをHerokuの外にバックアップ</li>
<li>heroku_backup_taskを拡張</li>
</ul>
</li>
</ul>
</li>
<li>おすすめ資料

<ul>
<li><a href="http://gihyo.jp/dev/serial/01/heroku">Herokuで作るFacebookアプリ</a></li>
<li>etc…</li>
</ul>
</li>
</ul>


<h2>デモ</h2>

<p>ワンクリックでFacebookアプリ On Heroku のデモでした</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[渋谷EdgeRails勉強会]]></title>
    <link href="http://blueplanet.github.com/blog/2012/03/26/shibuyarails/"/>
    <updated>2012-03-26T19:19:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/03/26/shibuyarails</id>
    <content type="html"><![CDATA[<p>　今日<a href="http://atnd.org/events/25274">第２回 渋谷Edge Rails勉強会 @masuidrive氏によるRails3講義 × 株式会社ドリコム事例発表</a>参加に行きました</p>

<h2>Rails周り @増井さん</h2>

<h3>Rails 歴史</h3>

<ul>
<li>Ver 1の頃 CoCやDRYなどの特徴で注目される</li>
<li>Ver 2 色々改善されるが、まだ課題が残ってる

<ul>
<li>Merbはより設計が綺麗なので、合流してRails開発に注力</li>
<li>Railsに関する周辺サービスが出てきた　Heroku / New relic / Engine yard

<ul>
<li>new relic：いわゆるサーバ監視サービスが、Railsのどのメソッド、レイアウトの描画か、サーバ通信か、どこが遅いのかを分析できるサービス</li>
</ul>
</li>
</ul>
</li>
<li>Ver 3以降：モジュール化</li>
<li>Rails：変化を進んで受け入れる

<ul>
<li>Merbの吸収も同じ考え</li>
</ul>
</li>
</ul>


<h3>Build for Rails</h3>

<ul>
<li>コード書く

<ul>
<li>Scaffoldは使わない</li>
<li>プラグインを使うか・使わないか　はじめは使うか</li>
</ul>
</li>
<li>テストを書く

<ul>
<li>最低でも Test/Codeは３ 実際の実装＋テストは２倍で見積るほうが</li>
<li>UnitTest vs RSpec ModelはUnitTestで、以外は自作でHTTP経由のツールを使う</li>
</ul>
</li>
<li>非同期処理</li>
<li>パフォーマンス</li>
<li>運用

<ul>
<li>Passenger / Unicorn

<ul>
<li>Passenger 数分間のシャットダウンの時間がある</li>
<li>Unicorn Down時間ない</li>
</ul>
</li>
</ul>
</li>
<li>レベル別デプロイ
  ＊ 開発者のみ　部内　社内　αユーザ　βユーザ　全体　というレベル付けて公開できるように</li>
</ul>


<h3>Rails 4.0</h3>

<ul>
<li>今年らしい</li>
<li>Ruby 1.9以上</li>
<li>RESTfulを更に強化</li>
</ul>


<h3>宣伝</h3>

<ul>
<li>Ruby公式資格教科書</li>
<li>Taimnuim</li>
</ul>


<h2>Railsのはまりポイント</h2>

<ul>
<li>クラスのインスタンス変数

<ul>
<li>@foo ||= bar <strong>bar</strong>はDBから取得した値だったら、最新のデータに反映されない可能性が</li>
</ul>
</li>
<li>JSONが壊れた

<ul>
<li>MySQLのTextは65536バイトまでなので</li>
</ul>
</li>
<li>index名の長さ制限

<ul>
<li>MySQLの制限は64バイトまで</li>
</ul>
</li>
<li>tinyintのカラムは、ActiveRecordでBoolとして使ってる、数値ではない</li>
</ul>


<p>ほかのネタもいろいろありましたが、全然分かっていません。。。</p>
]]></content>
  </entry>
  
</feed>
