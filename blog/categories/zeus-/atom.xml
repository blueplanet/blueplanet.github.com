<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: zeus, | 蒼い惑星の記録]]></title>
  <link href="http://blueplanet.github.com/blog/categories/zeus-/atom.xml" rel="self"/>
  <link href="http://blueplanet.github.com/"/>
  <updated>2013-04-18T22:52:21+09:00</updated>
  <id>http://blueplanet.github.com/</id>
  <author>
    <name><![CDATA[blueplanet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[いまさらの zeus + guard の導入]]></title>
    <link href="http://blueplanet.github.com/blog/2013/04/18/zeus-with-guard/"/>
    <updated>2013-04-18T12:34:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2013/04/18/zeus-with-guard</id>
    <content type="html"><![CDATA[<p><code>guard-rspec</code>を使って、<code>spec</code>が保存される都度自動実行されるが、<code>spec</code>を増えると、やはり実行時間に気になるので、何とかしたい</p>

<h2>zeus を選択する理由</h2>

<ul>
<li><code>Spork</code>と比較

<ul>
<li><code>spec-helper</code>ファイルを汚染しない</li>
</ul>
</li>
<li><code>Commands</code>と比較

<ul>
<li><code>rspec</code>対応</li>
<li><code>destroy</code>対応</li>
<li><code>Commands</code>は両方とも使えいないらしい</li>
</ul>
</li>
<li><code>Spring</code>と比較

<ul>
<li><code>destroy</code>対応</li>
<li><code>zeus start</code>１つプロセスで、異なるセッション間で共有出来る

<ul>
<li><code>Spring</code>はセッション毎に<code>Spring server</code>が走ってるらしい</li>
</ul>
</li>
</ul>
</li>
</ul>


<h2>導入方法</h2>

<ul>
<li><code>Gemfile</code>の<code>development</code>グループに追加

<ul>
<li>`gem "zeus"</li>
</ul>
</li>
<li><code>Guard</code>と併用している場合、<code>Guardfile</code>を修正

<ul>
<li><code>guard 'rspec'</code>に<code>zeus: true</code>オプションを追加</li>
<li>このオプションによって、<code>Guard</code>が<code>rspec</code>を実行する時に<code>bundle exec zeus rspec</code>になる</li>
<li><code>guard-zeus</code>という<code>gem</code>もありますが、これを使うと、<code>Guard</code>起動すると、<code>zeus start</code>を実行してくれるが、<code>spec</code>実行される通度、<code>zeus start</code>の内容と<code>spec</code>実行の出力とバラバラになってしまうので、却下</li>
</ul>
</li>
<li><code>Cucumber</code>使わないとか、の場合は、<code>zeus.json</code>を作成

<ul>
<li>やったのは

<ul>
<li>'Cucumber'を削除</li>
<li>'dbconsole'を削除</li>
<li>'runner'を削除</li>
</ul>
</li>
<li>ちなみに、<code>zeus init</code>を実行すると、ひな形が作成してくれる</li>
</ul>
</li>
</ul>


<p>```
{
  "command": "ruby -rubygems -rzeus/rails -eZeus.go",</p>

<p>  "plan": {</p>

<pre><code>"boot": {
  "default_bundle": {
    "development_environment": {
      "prerake": {"rake": []},
      "console": ["c"],
      "server": ["s"],
      "generate": ["g"],
      "destroy": ["d"]
    },
    "test_environment": {
      "test_helper": {"test": ["rspec", "testrb"]}
    }
  }
}
</code></pre>

<p>  }
}
```</p>

<h2>問題</h2>

<ul>
<li><code>spec</code>の中に、<code>shared_context</code>を使ってるせいかもしれませんが、<code>zeus rspec ...</code>を実行する都度、<code>...not found shareed_context...</code>エラーになってる

<ul>
<li>対策として、<code>spec_helper</code>の<code>require rspec/autorun</code>行を削除するとエラーがなくなった</li>
<li>正直に言うと、その行のそもそもの役割はよく分かってない。削除しても、<code>rspec</code>とかも正常に実行出来るし</li>
</ul>
</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>こう設定すると、修正を保存する都度、<code>spec</code>が素早く実行されて、すごく快適です</li>
</ul>

]]></content>
  </entry>
  
</feed>
