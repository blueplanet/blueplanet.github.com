<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[蒼い惑星の記録]]></title>
  <link href="http://blueplanet.github.com/atom.xml" rel="self"/>
  <link href="http://blueplanet.github.com/"/>
  <updated>2013-01-06T17:29:36+09:00</updated>
  <id>http://blueplanet.github.com/</id>
  <author>
    <name><![CDATA[blueplanet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 RSpec+Capybara 简单BDD入门 -1]]></title>
    <link href="http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-1/"/>
    <updated>2013-01-06T17:17:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-1</id>
    <content type="html"><![CDATA[<p><a href="http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-cover">目录</a></p>

<h2>用户故事</h2>

<p>访问者希望看到所有帖子的列表</p>

<ul>
<li>显示帖子的标题和创建时间</li>
</ul>


<h2>环境准备</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -b f1
</span><span class='line'>rails c <span class="c"># console</span>
</span><span class='line'>rails s <span class="c"># server</span>
</span></code></pre></td></tr></table></div></figure>


<h2>步骤</h2>

<h3>新建文件<code>spec/features/guest_can_see_all_topics_spec.rb</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="n">feature</span> <span class="s1">&#39;访问者希望看到所有帖子的列表&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;访问/topics, 应该显示所有帖子&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span> <span class="s1">&#39;/topics&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">page</span><span class="o">.</span><span class="n">should</span> <span class="n">have_content</span> <span class="s2">&quot;DHH 的公开课&quot;</span>
</span><span class='line'>    <span class="n">page</span><span class="o">.</span><span class="n">should</span> <span class="n">have_content</span> <span class="s2">&quot;Rails3 中 compass 的 IE 使用问题&quot;</span>
</span><span class='line'>    <span class="n">page</span><span class="o">.</span><span class="n">should</span> <span class="n">have_content</span> <span class="s2">&quot;这周二上海搞Ruby Tuesday么？&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：No route matches [GET] &#8220;/topics&#8221;</li>
<li>原因：没有正确的路由设置信息</li>
</ul>


<h3>编辑<code>config/route.rb</code>, 增加<code>topics</code>的定义</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="n">resources</span> <span class="ss">:topics</span><span class="p">,</span> <span class="n">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：<code>uninitialized constant TopicsController</code></li>
<li>原因：没有定义<code>TopicsController</code></li>
</ul>


<h3>在<code>rails console</code>中执行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">generate</span> <span class="s2">&quot;controller topics&quot;</span>
</span><span class='line'>      <span class="n">create</span>  <span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">topics_controller</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'>      <span class="n">invoke</span>  <span class="n">haml</span>
</span><span class='line'>      <span class="n">create</span>    <span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">topics</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Completed&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：<code>The action 'index' could not be found for TopicsController</code></li>
<li>原因：<code>TopicsController</code>中没有定义<code>index</code>方法</li>
</ul>


<h3>编辑 <code>topics_controller.rb</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">TopicsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：<code>Missing template topics/index, application/index ...</code></li>
<li>原因：没有<code>topics/index</code>模板</li>
</ul>


<h3>新建文件：<code>app/views/topics/index.html.haml</code></h3>

<ul>
<li>测试失败：<code>Failure/Error: page.should have_content "DHH 的公开课"</code></li>
<li>原因：模板中没有显示内容</li>
</ul>


<p>拷贝<code>ui/topics.html.haml</code>的内容至当前模板</p>

<ul>
<li>测试成功了，但是不要高兴！成功是因为页面上所有的数据都是写死的假数据。必须更改为正确的代码</li>
</ul>


<h3>编辑<code>app/views/topics/index.html.haml</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">=</span> <span class="n">render</span> <span class="s1">&#39;shared/breadcrumb&#39;</span><span class="p">,</span> <span class="n">links</span><span class="p">:</span> <span class="o">[[</span><span class="s2">&quot;Home&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;社区&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="o">]]</span>
</span><span class='line'>
</span><span class='line'><span class="o">%</span><span class="n">section</span><span class="c1">#topics</span>
</span><span class='line'>  <span class="o">%</span><span class="n">section</span><span class="c1">#topics_info.box.box-gray.info-box</span>
</span><span class='line'>    <span class="o">%</span><span class="n">span</span> <span class="err">查看：</span> <span class="err">默认</span>
</span><span class='line'>  <span class="o">%</span><span class="n">ul</span><span class="o">.</span><span class="n">topics</span><span class="o">.</span><span class="n">box</span>
</span><span class='line'>    <span class="o">-</span> <span class="vi">@topics</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">topic</span><span class="o">|</span>
</span><span class='line'>      <span class="o">%</span><span class="n">li</span>
</span><span class='line'>        <span class="o">%</span><span class="n">a</span><span class="o">.</span><span class="n">span1</span><span class="p">(</span><span class="n">href</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="o">%</span><span class="n">img</span><span class="p">(</span><span class="n">src</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">gravatar_url</span><span class="p">(</span><span class="s1">&#39;joe@example.com&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="o">%</span><span class="n">article</span><span class="o">.</span><span class="n">span7</span>
</span><span class='line'>          <span class="o">%</span><span class="nb">p</span><span class="o">.</span><span class="n">topic_title</span>
</span><span class='line'>            <span class="o">=</span> <span class="n">link_to</span> <span class="n">topic</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'>          <span class="o">%</span><span class="nb">p</span><span class="o">.</span><span class="n">topic_info</span>
</span><span class='line'>            <span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;分享&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">class</span><span class="p">:</span> <span class="s2">&quot;node&quot;</span>
</span><span class='line'>            <span class="o">%</span><span class="n">span</span><span class="o">=</span> <span class="s2">&quot;  •  &quot;</span>
</span><span class='line'>            <span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;knwang&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">class</span><span class="p">:</span> <span class="s2">&quot;user_link&quot;</span>
</span><span class='line'>            <span class="o">%</span><span class="n">span</span><span class="o">=</span> <span class="s2">&quot;  •  &quot;</span>
</span><span class='line'>            <span class="o">=</span> <span class="s2">&quot;published </span><span class="si">#{</span><span class="n">time_ago_in_words</span><span class="p">(</span><span class="n">topic</span><span class="o">.</span><span class="n">created_at</span><span class="p">)</span><span class="si">}</span><span class="s2"> ago&quot;</span>
</span><span class='line'>        <span class="o">%</span><span class="nb">p</span><span class="o">.</span><span class="n">replies</span><span class="o">.</span><span class="n">span1</span>
</span><span class='line'>          <span class="o">%</span><span class="n">span</span> <span class="mi">12</span>
</span><span class='line'>
</span><span class='line'><span class="o">%</span><span class="n">section</span><span class="c1">#sidebar</span>
</span><span class='line'>  <span class="o">%</span><span class="n">section</span><span class="c1">#new_topic.box</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;发布新帖&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">class</span><span class="p">:</span> <span class="s2">&quot;btn btn-success&quot;</span>
</span><span class='line'>  <span class="o">%</span><span class="n">section</span><span class="c1">#stats.box</span>
</span><span class='line'>    <span class="o">%</span><span class="n">ul</span>
</span><span class='line'>      <span class="o">%</span><span class="n">li</span> <span class="err">社区会员</span><span class="p">:</span> <span class="mi">4029</span> <span class="err">人</span>
</span><span class='line'>      <span class="o">%</span><span class="n">li</span> <span class="err">帖子数</span><span class="p">:</span> <span class="mi">312</span> <span class="err">篇</span>
</span><span class='line'>      <span class="o">%</span><span class="n">li</span> <span class="err">回帖数</span><span class="p">:</span> <span class="mi">3123</span> <span class="err">条</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：`undefined methodeach&#8217; for nil:NilClass&#8220;</li>
<li>原因：<code>TopicsController</code>的<code>index</code>方法中没有对<code>@topics</code>赋值</li>
</ul>


<h3>编辑<code>topics_controller.rb</code>，增加赋值部分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">TopicsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@topics</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意：由于是示范项目所以直接使用了 Topic.all ， 实际项目中绝对不能这样做</strong></p>

<ul>
<li>测试失败：<code>uninitialized constant TopicsController::Topic</code></li>
<li>原因：没有 <code>Topic</code> 这个 <code>model</code></li>
</ul>


<h3>在<code>rails conssole</code>中执行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">generate</span> <span class="s2">&quot;model topic title&quot;</span>
</span><span class='line'>      <span class="n">invoke</span>  <span class="n">active_record</span>
</span><span class='line'>      <span class="n">create</span>    <span class="n">db</span><span class="o">/</span><span class="n">migrate</span><span class="o">/</span><span class="mi">20121229122838</span><span class="n">_create_topics</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'>      <span class="n">create</span>    <span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">topic</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Completed&quot;</span>
</span><span class='line'><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试失败：<code>expected there to be text "DHH 的公开课" in "社区...</code></li>
<li>原因：测试数据库中没有对应的数据</li>
</ul>


<h3>编辑 <code>spec/features/guest_can_see_all_topics_spec.rb</code>，增加<code>background</code>部分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="n">feature</span> <span class="s1">&#39;访问者希望看到所有帖子的列表&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">create</span> <span class="n">title</span><span class="p">:</span> <span class="s2">&quot;DHH 的公开课&quot;</span>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">create</span> <span class="n">title</span><span class="p">:</span> <span class="s2">&quot;Rails3 中 compass 的 IE 使用问题&quot;</span>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">create</span> <span class="n">title</span><span class="p">:</span> <span class="s2">&quot;这周二上海搞Ruby Tuesday么？&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;访问/topics, 应该显示所有帖子&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span> <span class="s1">&#39;/topics&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">topic</span><span class="o">|</span>
</span><span class='line'>      <span class="n">page</span><span class="o">.</span><span class="n">should</span> <span class="n">have_content</span> <span class="n">topic</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试成功！！完成！！</li>
</ul>


<h2>提交代码</h2>

<p>git add .
git commit
git checkout dev
git merge f1 &#8211;no-ff
git push origin dev</p>

<h2>总结</h2>

<ul>
<li>执行测试之后，按照提示的错误进行修改即可</li>
<li>问题

<ul>
<li>目前自动测试基本不起作用，每次都需要手动执行测试</li>
</ul>
</li>
</ul>


<p>下一步骤：<a href="http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-2">使用 RSpec+Capybara 简单BDD入门 -2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 RSpec+Capybara 简单BDD入门 -目录]]></title>
    <link href="http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-cover/"/>
    <updated>2013-01-06T17:14:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-cover</id>
    <content type="html"><![CDATA[<h2>前提</h2>

<ul>
<li>我也是个Rails初学者，文中可能会有考虑不周或者错误的地方，希望大家多指正，共同进步</li>
<li>计划是使用RSpec+Capybara写 features 测试＋简单的单元测试，并不是完全的BDD，是一个简略版本</li>
</ul>


<h2>缘起</h2>

<ul>
<li>前段时间刚看完了 The RSpec Book之后对BDD特别感兴趣，尝试了一下 cucumber 但不是很顺利就暂时放下了</li>
<li>之后有幸参加了的社区最高楼 @knwang 周四晚现场编程网上演示 面向新手的现场演示，被从外至内的理念震撼了</li>
<li>@knwang 在交流时间里说过，实际项目开发的时候，会使用TDD/BDD进行开发，但基本的从外至内的理念是不变的，于是参加活动之后，先是按照 @knwang 的演示步骤自己动手做了几遍，觉得收获非常大，如果能够把RSpec加进去的话应该更完美。</li>
<li>最近又学到了RSpec写features的方法，于是决定使用 RSpec+Capybara来把 @knwang 的步骤重新做一遍，顺便把这个过程记录下来，希望能够对其他人有所帮助</li>
</ul>


<h2>计划</h2>

<ul>
<li>完全按照 @knwang 的步骤，重写一遍 Ruby China Clone</li>
<li>使用RSpec+Capybara 编写测试</li>
<li>每个步骤新开一个帖子，这个帖子作为目录。步骤完成后把新帖子链接加到这个帖子里</li>
<li>把 @knwang 的步骤翻译成了中文。由于英文水平很低，并且用户故事的写法也不是很熟练，可能看起来比较生硬，请见谅</li>
</ul>


<h2>步骤</h2>

<ol>
<li><a href="http://blueplanet.github.com/blog/2013/01/06/ruby-china-clone-1">访问者希望看到所有帖子的列表</a></li>
<li><a href="http://ruby-china.org/topics/7773">访问者希望看到帖子的节点</a></li>
<li><a href="http://ruby-china.org/topics/7774">访问者希望看到一个节点的帖子列表</a></li>
<li><a href="http://ruby-china.org/topics/7775">访问者希望看到帖子的详细信息</a></li>
<li><a href="http://ruby-china.org/topics/7776">访问者希望看到用户的信息</a></li>
<li><a href="http://ruby-china.org/topics/7779">访问者希望注册用户</a></li>
<li><a href="http://ruby-china.org/topics/7780">访问者希望登录</a></li>
<li><a href="http://ruby-china.org/topics/7781">用户希望公开帖子</a></li>
<li><a href="http://ruby-china.org/topics/7782">用户希望看到帖子的回复列表</a></li>
<li><a href="http://ruby-china.org/topics/7785">用户希望看到最新回复的信息</a></li>
<li><a href="http://ruby-china.org/topics/7787">用户希望对帖子进行回复</a></li>
</ol>


<h2>可能出现的问题</h2>

<h3>无法退出。按照下面的步骤实现即可</h3>

<h4>编辑<code>controllers/sessions_controller.rb</code>，增加<code>destroy</code>方法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:user_name</span><span class="o">]</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>编辑<code>layouts/application.html.haml</code>，修改第26行的链接</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>          <span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;退出&quot;</span><span class="p">,</span> <span class="n">sign_out_path</span>
</span></code></pre></td></tr></table></div></figure>


<h4>编辑<code>conf/routes.rb</code>，增加路由信息</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="n">match</span> <span class="s1">&#39;sign_out&#39;</span><span class="p">,</span> <span class="n">to</span><span class="p">:</span> <span class="s2">&quot;sessions#destroy&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>在使用<code>rails server</code>后启动浏览器进行测试的时候没有<code>Node</code></h3>

<ul>
<li>由于是示范项目，所以并没有把所有功能做完</li>
<li>可以在<code>rails console</code>里面加上几个就可以了</li>
</ul>


<h2>起步</h2>

<ul>
<li>参考我的git 库

<ul>
<li>gitcafe : https://gitcafe.com/blueplanet/ruby_china_clone</li>
<li>github : https://github.com/blueplanet/ruby_china_clone</li>
</ul>
</li>
<li>主要有两个分支：

<ul>
<li>master 分支：从 @knwang 的库拷贝过来的。除了基本的框架之外还有 ui 这个 controller。相当于美工做好的设计，纯HTML加上假的数据。这个分支不打算更新</li>
<li>dev 分支：今后的开发分支。修改会提交到这个分支</li>
</ul>
</li>
</ul>


<h2>本地开发步骤</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://gitcafe.com/blueplanet/ruby_china_clone
</span><span class='line'><span class="nb">cd </span>ruby_china_clone
</span><span class='line'>git checkout master
</span><span class='line'>git checkout -b dev <span class="c"># 创建dev分支</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>启动自动测试环境</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle install --without production <span class="c"># 只安装开发环境和测试环境需要的gem</span>
</span><span class='line'>bundle <span class="nb">exec </span>guard
</span></code></pre></td></tr></table></div></figure>


<p>执行之后如果出现下面的提示，说明环境没问题了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Finished in 0.00856 seconds
</span><span class='line'>0 examples, 0 failures
</span><span class='line'>Randomized with seed 26104
</span><span class='line'>Done.
</span><span class='line'>17:00:57 - INFO - Guard is now watching at ....
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> guard<span class="o">(</span>main<span class="o">)</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>以后的步骤中，新建或者保存 spec 文件之后，会自动执行对应的测试</p>

<p>先把坑挖好，慢慢填上！</p>

<h2>感想</h2>

<ul>
<li>真正动手很重要

<ul>
<li>实际花费时间：写帖子20小时左右，之前的练习和调查也至少是这个数字</li>
<li>这40个小时，感觉是进步最大最快的40个小时。所以，不能只顾看书，动手才是真的！</li>
</ul>
</li>
<li>实际开发很复杂

<ul>
<li>由于示范的侧重点不同，实际上回避了两个比较大的问题。一是UI设计，二是用户故事的写法。</li>
<li>实际上如果自己做项目，最先遇到的就是这两个问题。至少我是撞得够呛，呵呵。计划下个阶段摸索一下这两个方面。</li>
</ul>
</li>
</ul>


<p>最后，再次感谢 @knwang 的演示！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gtd todoist]]></title>
    <link href="http://blueplanet.github.com/blog/2012/12/24/gtd-todoist/"/>
    <updated>2012-12-24T20:39:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/12/24/gtd-todoist</id>
    <content type="html"><![CDATA[<p><a href="doit.im">Doit.im</a> を一ヶ月の会員を購入してみたんですが、いつでもどこでも何回でも同期出来て、すごく使いやすいです。</p>

<p>会員の期限が切れてしまうと、24時間一回しか同期出来ないので、すごく不便ですね。</p>

<p>他の代替案が有るかどうかをまた調べて見るところ。</p>

<h2>todoist ：却下</h2>

<h3>メリット</h3>

<ul>
<li>無料</li>
<li>UIがシンプルで見やすい</li>
<li>サポートOSをがおおい

<ul>
<li>MacOS, iOS, Chromeなど</li>
</ul>
</li>
<li>同期制限がなさそう</li>
</ul>


<h3>デメリット</h3>

<ul>
<li>本格のGTDではない

<ul>
<li>Inboxがない、新規タスクは必ずどのプロジェクトに追加する</li>
</ul>
</li>
<li>タグとコンテキストがない

<ul>
<li><code>@</code>でラベルを付けますが、</li>
</ul>
</li>
</ul>


<h2>wunderlist：再検討</h2>

<h3>メリット</h3>

<ul>
<li>無料</li>
<li>UIがシンプルで見やすい</li>
<li>サポートOSをがおおい

<ul>
<li>MacOS, iOS, Chromeなど</li>
</ul>
</li>
<li>同期制限がなさそう</li>
</ul>


<h3>デメリット</h3>

<ul>
<li>完璧のGTDではない

<ul>
<li>タグとコンテキスト機能は無さそう</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[簡単なプラグインの作る過程]]></title>
    <link href="http://blueplanet.github.com/blog/2012/12/20/auto-reveal-in-sidebar-plugin/"/>
    <updated>2012-12-20T22:48:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/12/20/auto-reveal-in-sidebar-plugin</id>
    <content type="html"><![CDATA[<p>この記事は<a href="http://www.adventar.org/calendars/20">Sublime Text 2 Advent Calendar 2012</a> の21日目の記事です。</p>

<h2>きっかけ</h2>

<ul>
<li><code>Theme Phoenix</code>を導入してから、SideBarがもっとカッコよくなったので、もともとずっと非表示してたが、最近表示している時間もどんどん増えています。</li>
<li>そうなると、SideBarに常に編集中のファイルをフォーカス項目にして頂きたい</li>
<li><code>フォーカス項目</code>という言葉がわかりづらいかもしれませんが、ようは、下記のように、青色になっている項目のことです</li>
</ul>


<p><img src="https://lh6.googleusercontent.com/-NhQOSIsH4fQ/UNMYmJCyyUI/AAAAAAAACDg/IppMrD7BN6w/s800/Screen%2520Shot%25202012-12-20%2520at%252022.53.33.png" alt="" /></p>

<h2>調査過程</h2>

<ul>
<li>編集中ファイルで、右クリックのコンテキストメニューには「Revel in Side Bar」というアイテムを発見した！これを実行すると、今のファイルがSideBarのフォーカスアイテムになります。</li>
<li>なるほど！このコマンドをファイルが切り替えられる時点で呼び出せば行けぞう！</li>
<li><code>SideBarEnhancements</code>の機能かな、と思って、ソースを検索してみたら、ない！</li>
<li>じゃ、標準機能みたいね。「Reveal in Side Bar」文言で<code>Packages\Default</code>を検索してみたら、あった！</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>9      { "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"}, "caption": "Open Containing Folder…" },
</span><span class='line'>   10      { "command": "copy_path", "caption": "Copy File Path" },
</span><span class='line'>   11:     { "command": "reveal_in_side_bar", "caption": "Reveal in Side Bar" },
</span><span class='line'>   12      { "caption": "-", "id": "end" }
</span><span class='line'>   13  ]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>なるほど！コマンドは<code>reveal_in_side_bar</code>ですね。実装しよう！</li>
</ul>


<h2>実装過程</h2>

<ul>
<li>ファイルが切り替えられる度に実行したいので、<code>sublime_plugin.EventListener</code>を継承</li>
<li>実際のコードはは一行だけ！出来ました！おめでとうございます！</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sublime</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sublime_plugin</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">AutoRevealInSideBar</span><span class="p">(</span><span class="n">sublime_plugin</span><span class="o">.</span><span class="n">EventListener</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">on_activated</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">view</span><span class="p">):</span>
</span><span class='line'>        <span class="n">view</span><span class="o">.</span><span class="n">window</span><span class="p">()</span><span class="o">.</span><span class="n">run_command</span><span class="p">(</span><span class="s">&quot;reveal_in_side_bar&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>これで、ファイルを切り替える時、どんなに深い階層にあるファイルであっても、ちゃんとSideBarにフォーカスアイテムになるはずです。</li>
</ul>


<h2>まとめ</h2>

<ul>
<li><code>Sublime Text 2</code>自体の機能もいろいろコマンドになったりしますので、既存の機能を呼び出したい場合は、まず<code>Packages\Default</code>の中を調べましょう</li>
<li>プラグインを作るのはすっごく簡単です。どんどんやってみましょう！</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[実践 Rails コードチャレンジに参加しました]]></title>
    <link href="http://blueplanet.github.com/blog/2012/12/20/codeiq-jissen-rails/"/>
    <updated>2012-12-20T21:27:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/12/20/codeiq-jissen-rails</id>
    <content type="html"><![CDATA[<p>昨日、<a href="http://atnd.org/event/ForkwellCodeIQ">【Forkwell＆CodeIQ共催】実践 Rails コードチャレンジ (松田明さん監修)</a> に参加しました</p>

<h2>きっかけ</h2>

<ul>
<li>イベントを分かってから、参加するかどうかを悩んでました。Rails素人なので、多分回答出来ないかと思いました</li>
<li>でも、やはり @a_matsuda さんのお話しを聞きたいですね。特に Rails 4</li>
<li>ので、応募しちゃいました</li>
</ul>


<h2>過程</h2>

<p>イベンとの前問題が公開されたので、17日夜からチャレンジしてみました</p>

<h3>第一問</h3>

<ul>
<li>最初は1問だけだと思いました。。。。。</li>
<li>SQLチューニングのお話しで、例のN+1の問題なので、これなら回答できそうと。</li>
<li><code>counter cache</code>機能は分かってたが、細かい使い方は調べて回答しました。<code>migration</code>ファイルの書き方も後ほど気づいて、既存のカウント数を設定したり、<code>reset_column</code>したり追加しました</li>
<li>回答は <a href="https://gist.github.com/4322792/revisions"> gist reversions </a> で</li>
<li>ギリギリ前日までに回答をアップロードしたら、第二問が！！！</li>
<li>マジ！しかも、細かい指示がなく、「コードの負債をソースレビュー視点から直してください」という</li>
<li>まあ、素人ですし、1問できてるし、残りは他の方の回答を勉強すればという気持ちになった</li>
</ul>


<h3>第二問</h3>

<ul>
<li>いろいろ見ても分からなかったので、<code>PublicationController</code>だけを読んで、ある重複コードを抽出だけでした</li>
<li>コードはここ <a href="https://github.com/blueplanet/forkwell/commit/252a67b133e6e1fc1205968ba3653be14627734c">github commit </a></li>
</ul>


<h3>第三問</h3>

<ul>
<li>何となくのぞってみたいので、第二問のとんでもないものをアップしてみました</li>
<li><code>Rails 4 のstrong parametersで。。。。</code>とかなんとか、<code>strong parameters</code>ってなんでしょうか？</li>
<li>全く分からないので、諦めて、同じテーブルの同士とちょっとワイワイ話してみました。楽しかった</li>
</ul>


<h3>発表</h3>

<ul>
<li>最後は、参加者が自分の回答を発表して、 @a_matsuda 先生にレビューしてもらえました</li>
<li>1問目の回答は、やはりドキドキしちゃったので、応募出来なかった

<ul>
<li>回答した方は<code>counter cache</code>を使った方もいて、 @a_matsuda 先生に「これは満点」と褒められて、そして！なんと、github のTシャツがもらった！応募しなかった僕はすごく悔しかった！</li>
</ul>
</li>
<li>2問目は、1問目のプレゼントを見てすごく欲しいので、何とかしたいが、自分のものがとんでもない修正なので、あんまり勇気がなかった</li>
<li>が、二人の方がいろいろ発表したのですが、二人共僕の箇所に気づいてなかった、そして、うちのテーブルには、発表は１つもなかったので、やはり勇気を出して発表して見ました。</li>
<li>なんと、@a_matsuda　先生に「おお、このやり方は DHH らしいですね！」と褒められた！すごく嬉しかった！</li>
<li>あと、一番重要なのは、github のカップを貰いました！ありがとうございました！</li>
</ul>


<p><img src="https://lh4.googleusercontent.com/-iaohwghL2DU/UNMT07j553I/AAAAAAAACDE/PNcOyQVs2hk/s800/github_cup.png" alt="" /></p>

<h2>@a_matsuda 先生から Rails 4 関連のお話し</h2>

<ul>
<li><code>strong parameters</code>の説明

<ul>
<li>なるほど。<code>mass assignment</code>の対策ですね。<code>model</code>の責任じゃないよ、<code>controller</code>ちゃんとやれ！的な感じですかね</li>
</ul>
</li>
<li><a href="https://github.com/asakusarb/action_args">github: asakusarb / action_args</a>

<ul>
<li>@a_matsuda 先生の gem 。細かい機能はまだ理解出来てないので、後で調べる</li>
</ul>
</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>人数ちょっと少なかった気がしますが、気分はすごく良かったです。またチャンスがありましたら、また参加したいですね</li>
<li>@a_matsuda 先生は意外に優しかった。←　いつか @a_matsuda 先生が厳しいと誤解したんだろうね</li>
<li>もっと @a_matsuda 先生の技を勉強したいです！</li>
<li><a href="https://github.com/CodeIQ/forkwell">github: CodeIQ/forkwell</a> 今回チャレンジ用のリポジトリに、特に<code>question_2</code>から出てきた<code>RSpec</code>の<code>requests</code>スペックの書き方は大変勉強になりました。

<ul>
<li>最近はちょうど<code>request</code>の書き方にハマっているので、すごく嬉しいです！</li>
<li>最初は<code>requests</code>で<code>rspec</code>実行すると、すべて赤だったが、<code>jnicklas/capybara</code>の <code>Ver2.0</code>以降は、<code>features</code>じゃないとダメという仕様変更でした。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PlainTasks : todo-list plugin for Sublime Text 2]]></title>
    <link href="http://blueplanet.github.com/blog/2012/12/17/plain-task-for-sublimetext/"/>
    <updated>2012-12-17T07:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/12/17/plain-task-for-sublimetext</id>
    <content type="html"><![CDATA[<p>この記事は、<a href="http://www.adventar.org/calendars/20">Sublime Text 2 Advent Calendar 2012</a>の17日目の記事です。</p>

<p><code>SublimeText2</code>でシンプルでTodoListを管理するプラグイン<a href="https://github.com/aziz/PlainTasks">PlainTasks</a>を紹介します。</p>

<p>ほとんど<code>Readme</code>の内容になってしまいますが、プラスアルファの部分もあります。</p>

<p><img src="https://lh6.googleusercontent.com/-tqMvj4KvKj8/UM1iJrDui1I/AAAAAAAACCo/k2vbRXPmBpk/s800/Screen%2520Shot%25202012-12-16%2520at%252014.39.23.png" alt="" /></p>

<h2>インストール</h2>

<p>パッケージコントロールからインストール可能。<code>plaintask</code>で検索すれば出てきます。
 インストール出来た時点では何も変わらないのですが、<code>Cmd + Shift + P</code>の<code>command palette</code>に、<code>Tasks: New document</code>コマンドが追加されます。これを実行すると、下記のような新しいタブが出てきます。 <br/>
　このタブは、設定されているスキームなどすべて無視して、独自のスタイルになります。</p>

<h2>使い方</h2>

<h3>基本</h3>

<ul>
<li>「：」で終わってる行は、プロジェクト・リストというタスクの集合的なものになります</li>
<li><code>Cmd + enter</code> or<code>Cmd + i</code>：新しいタスクを作成</li>
<li><code>Cmd + d</code>：タスクの「完了・未完了」の切り替え @  (12-12-16 14:16)

<ul>
<li>と言っても、「完了」と言うのは、タスクの後ろに「@done (日付)」が追加されるだけ</li>
<li>「@done」という特殊なキーワードが追加されることで、タスクの見た目が変わります</li>
</ul>
</li>
<li><code>Cmd + m</code>：タスクの「キャンセル・未完了」の切り替え @cancelled (12-12-16 13:53)

<ul>
<li>キーワードが「@cancelled」以外は@done と一緒</li>
</ul>
</li>
<li><code>Cmd + shift + a</code>：「@done」と「@cancalled」になっているタスクを当該ファイルの最後「Archive」部分に移動する</li>
</ul>


<h3>中級</h3>

<ul>
<li>プロジェクト・リスト・タスクは、何階層のネストも出来る</li>
<li><code>Cmd + r</code>：プロジェクト・リストのものが表示されるので、早めに移動出来る</li>
<li>「@」の後ろに任意文字列を付ける事で、カテゴリ・タグとして使われる

<ul>
<li>今の時点では見た目が変わる以外は、特別な機能は泣いですが</li>
</ul>
</li>
<li>プロジェクト・リスト・タスクの下の行に任意の説明を気軽に入れられる

<ul>
<li>見た目はより薄いグレーになっている</li>
</ul>
</li>
<li><code>--</code>を入力し、<code>tab</code>キーを押すと、下記のような区切り線が出来ます
&#8212; ✄ &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</li>
</ul>


<h2>設定</h2>

<ul>
<li><p><code>open_tasks_bullet</code>：未完了タスクのマーク
Default:-
other valid options: - ❍ ❑ ■ □ - ▪ ▫ – — ≡ → ›</p></li>
<li><p><code>done_tasks_bullet</code>：完了タスクのマーク
Default:-
other valid options: + ✓ ☑</p></li>
<li><p><code>date_format</code>：日付フォーマット
Default: (%y-%m-%d %H:%M)</p></li>
<li><p><code>done_tag</code>：完了タスクにタグを使うかどうか。<code>false</code>にすると、完了タスクに付ける文字は「@ 日付」になります
Default: true</p></li>
<li><p><code>before_tasks_bullet_margin</code>：新しい行にタスク作成する時、前のマージンのスペース数。ネストがある場合は、ネストに従います
Default: 1</p></li>
</ul>


<h2>注意点</h2>

<ul>
<li>前にも書きましたが、スタイルは特別なので、例え文字を大きくしたいとしても、普段の「Cmd + +」で拡大できません。該当プラグインの設定ファイルをいじってみたらわかると思いますが、設定ファイルに「font_size」項目があるので、それを変更すれば行けます。</li>
</ul>


<h2>足りない・やってほしい機能</h2>

<ul>
<li>タスクとプロジェクト・リストがネスト出来ますが、移動したい場合は、単にエディター自体の行移動機能なので、構造を無視されてしまいます。構造をみて、移動してくれれば嬉しいですね</li>
<li>「@」でタグを付けて、見やすくなっていますが、もっと活用したい。例え、素早く検索とか</li>
<li>GTD的な話しをすると、タグとコンテキストがあります。タグは内容の関連付けで、コンテキストは場所（自社・家・電車とか）にしています。なので、「#」も使いたいですね</li>
</ul>


<h2>派生Fork</h2>

<ul>
<li>有志によって、<code>OmniFocus</code>の見た目のForkもできています。気になる方はどうぞ。<br/>
<a href="https://github.com/poritsky/PlainTasksOF">github PlainTasksOF</a></li>
</ul>


<h2>まとめ</h2>

<p>実は職場で作業記録ツールとして、このプラグインを使っています。シンプルで結構使いやすいです。</p>

<p>この記事を書くことで、自分に対しての要望も明確できています。時間を見て、PullRequestを送ってみたいと思います</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第0回 Sublime Text 2 勉強会]]></title>
    <link href="http://blueplanet.github.com/blog/2012/11/11/sublime-text-study-zero/"/>
    <updated>2012-11-11T22:21:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/11/11/sublime-text-study-zero</id>
    <content type="html"><![CDATA[<p>記事は遅れましたが、11/7 <a href="http://atnd.org/events/33305">第0回 Sublime Text 2 勉強会</a>に参加しました。</p>

<p>最近 SublimeText2 を使って、プラグインも作ったので、自分のハマったところとか発表して共有しました。</p>

<p>発表前に一回練習しましたが、やはり緊張しちゃいました。</p>

<p>資料はこちらです。</p>

<script async class="speakerdeck-embed" data-id="509a59f71eeb970002042ec7" data-ratio="1.33333333333333" src="http://blueplanet.github.com//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sublime text 2 の octopress プラグインを作ってみました]]></title>
    <link href="http://blueplanet.github.com/blog/2012/10/16/sublime-text-2-octopress/"/>
    <updated>2012-10-16T21:36:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/10/16/sublime-text-2-octopress</id>
    <content type="html"><![CDATA[<h2>きっかけ</h2>

<p><a href="http://www.sublimetext.com/">Sublime Text 2</a> 購入してから1ヶ月ぐらいですが、ちょうど <a href="http://octopress.org/">Octopress</a> も使っているので、探してみたら、まだ専用のプラグインがないため、作ってみました。</p>

<!-- more -->


<h2>実装周り</h2>

<ul>
<li>言語は好きな<code>ruby</code>ではなく<code>python</code>なんですが、これも勉強したい言語ではなるため、特に抵抗感がありません</li>
<li><a href="http://www.sublimetext.com/">Sublime Text 2</a> のプラグインに関するAPIのドキュメントは <a href="http://www.sublimetext.com/docs/2/api_reference.html">公式サイト</a> 以外はほとんどなくて、あっちこっち探して、苦労していました</li>
<li>逆にデフォルトで入っている機能は、いろいろプラグインとして実装されるものが多い為、結構参考になりました。有難うございます！</li>
<li>ハマったところ

<ul>
<li>作ったものは、<a href="http://www.sublimetext.com/">Sublime Text 2</a>で直接に<a href="http://octopress.org/">Octopress</a>のコマンドを実行するので、<a href="http://www.sublimetext.com/">Sublime Text 2</a> 自体の制限により、<a href="http://www.sublimetext.com/">Sublime Text 2</a> をコマンドラインから起動しないと、環境変数はうまく引き継げないようです。これは結構ハマってました</li>
<li>同期・非同期はいろいろ悩んだりしていました。最初は実行出来ればよくて、同期でいやと思ったが、結局、<code>rake generate</code>を実行すると、2,3秒程度ではない為、カーソルが回ってしまいます。気持ち悪いため、非同期にしました</li>
</ul>
</li>
</ul>


<h2>イメージ</h2>

<p><img src="https://lh3.googleusercontent.com/-yFnkYy_h9bo/UHlZwhPHNKI/AAAAAAAACCE/njGTdOMnoD8/s800/Screen%2520Shot%25202012-10-13%2520at%252020.33.03.png" alt="image" /></p>

<h2>サポートコマンド</h2>

<ul>
<li><code>new_post</code></li>
<li><code>new_page</code></li>
<li><code>generate</code></li>
<li><code>deploy</code></li>
<li><code>gen_deploy</code></li>
</ul>


<h2>TODO</h2>

<ul>
<li><code>new_post</code>または<code>new_page</code>を実行した後は、自動でカーソルをタイトルのところを選択した状態にしたい</li>
<li>カテゴリは全部手入力だと間違いやすいので、リストで選択できたらいいなと思う</li>
<li><code>preview</code>もしたいが、どこまでするかはまだ悩んでる</li>
</ul>


<h2>URL</h2>

<ul>
<li>PackageControlリポジトリに登録し、PullRequestを送りましたが、まだ承認をもらってないため、とりあえずは、直接ダウンロードだけです。</li>
</ul>


<p>こちらへどうぞ <a href="http://github.com/blueplanet/sublime-text-2-octopress">sublime-text-2-octopress</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby-Chinaのオンラインライブコーディングイベントに参加した]]></title>
    <link href="http://blueplanet.github.com/blog/2012/10/12/ruby-china-live-coding-by-knwang/"/>
    <updated>2012-10-12T21:24:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/10/12/ruby-china-live-coding-by-knwang</id>
    <content type="html"><![CDATA[<h2>きっかけ</h2>

<p><a href="http://ruby-china.org/">Ruby-China</a> は Ruby / Rails を勉強している中で、最近よくアクセスしているサイトの１つ。</p>

<p> 5日前に、 @knwang さんが、</p>

<blockquote><p><a href="http://ruby-china.org/">Ruby-China</a> に参加してから2ヶ月間経ちましたが、
やはり コミュニティにはどこから入門出来るかも分からない Rails の初心者が多いことに気付いました。
なので、10/11(木) 21:00 ~ 23:00 (北京時間)2時間で、オンラインのライブコーディングで
ゼロから簡単なアプリを作成するデモをやります。参加したい方はメアドを追記してください。</p></blockquote>

<p>という内容で投稿しました。</p>

<h2><a href="http://twitter.com/knwang">@knwang</a> さんは？</h2>

<p><a href="http://ruby-china.org/">Ruby-China</a> でたまたま目に見え、Rails のオンラインコース <a href="http://www.railstutors.com/#.UHgQy4VsKo8.twitter">Rails Tutors, Ruby on Rails online Courses</a> で起業しているようです。</p>

<!-- more -->


<h2>ライブコーディング</h2>

<h3>総評</h3>

<p>すごく良かった！！！参加の全員も、「今後もっとやりましょう！！」と盛り上がった</p>

<h3>良かったところ</h3>

<ul>
<li><a href="http://join.me/">join me</a> を利用して、スクリーンと音声を共有する形でした。このサービスはすごく良くて、100人以上の人を参加しているにもかかわらず、スクリーンと音声はほぼ完璧でした</li>
<li><a href="http://twitter.com/knwang">@knwang</a> のスキルは高すぎ！！！</li>
<li>そもそもの目的は、細かいソースの書き方ではなく、あるサービスを作ろうとする時、実際の考え方・実装の順番を示すことでした。実は、BDD の実践でした。要するに、テーブル構造とか、モデル関連とか、コントローラがいくつ必要だとか、全部じっくり考えてから実装するのではなく、<code>ユーザストリー -&gt; ビュー -&gt; コントローラ -&gt; モデル</code> という流れです。</li>
<li>2時間の制限があるため、実際はUIとテストをやってなかったんですが、全体の流れは見えせてもらって、一層よく理解できたという感じで、すごく刺激でした</li>
</ul>


<h3>ちょっと残念なところ</h3>

<ul>
<li>参加者は200人を超え、300近大勢いましたが、サービスの上限は250人で、40～50人しか利用した実績がなかった為、デモの品質を守りながら、順次に追記順番に従って参加者に案内する形でした。最後までも参加出来なかった方もいました</li>
<li>参加者はほぼ全員は、<a href="http://join.me">join me</a> を使った事がなかった為、使い方が分からないせいで、声を聞こえなかった方はいました</li>
<li>Webで参加すると声が聞こえないという事は、事前の案内メールでお知らせしてくれましたが、メール内容をよく読んでなかった方が何人がいて、声を聞こえなかった</li>
</ul>


<h2>後書き</h2>

<ul>
<li><a href="http://twitter.com/knwang">@knwang</a> の凄さをわかった為、すぐ <a href="http://www.railstutors.com/#.UHgQy4VsKo8.twitter">Rails Tutors, Ruby on Rails online Courses</a> のコースを参加しようと思ったら、メインはアメリカ向けなので、授業は英語になっています。英語は全くできないため、諦めました。</li>
<li>ちょうどつい最近、<a href="http://www.amazon.co.jp/dp/4798121932/">The RSpec Book</a>を読んだばかりで、写経はまだやってないところで、実際に BDD をやって頂いて、すごく勉強になりました</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS 10.8 gem install json faild]]></title>
    <link href="http://blueplanet.github.com/blog/2012/10/04/os-10-dot-8-gem-install-json-faild/"/>
    <updated>2012-10-04T06:25:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/10/04/os-10-dot-8-gem-install-json-faild</id>
    <content type="html"><![CDATA[<h2>環境</h2>

<ul>
<li>Mac OS 10.8.2</li>
<li>ruby 1.9.2p320</li>
<li>gem 1.8.24</li>
<li>xcode 4.5 (4G182)</li>
</ul>


<h2>問題</h2>

<p><code>gem install json</code>を実行する場合、下記のエラーで落ちる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install json                                                                       *<span class="o">[</span>master<span class="o">][</span>1.9.2-p320<span class="o">]</span>
</span><span class='line'>Fetching: json-1.7.5.gem <span class="o">(</span>100%<span class="o">)</span>
</span><span class='line'>Building native extensions.  This could take a <span class="k">while</span>...
</span><span class='line'>ERROR:  Error installing json:
</span><span class='line'>  ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>        /Users/gyo/.rbenv/versions/1.9.2-p320/bin/ruby extconf.rb
</span><span class='line'>creating Makefile
</span><span class='line'>
</span><span class='line'>make
</span><span class='line'>/usr/bin/gcc-4.2 -I. -I/Users/gyo/.rbenv/versions/1.9.2-p320/include/ruby-1.9.1/x86_64-darwin11.3.0 -I/Users/gyo/.rbenv/versions/1.9.2-p320/include/ruby-1.9.1/ruby/backward -I/Users/gyo/.rbenv/versions/1.9.2-p320/include/ruby-1.9.1 -I. -DJSON_GENERATOR -I<span class="s1">&#39;/Users/gyo/.rbenv/versions/1.9.2-p320/include&#39;</span>  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE   -fno-common -O3 -ggdb -Wextra -Wno-unused-parameter -Wno-parentheses -Wpointer-arith -Wwrite-strings -Wno-missing-field-initializers -Wshorten-64-to-32 -Wno-long-long  -pipe -O3 -Wall -O0 -ggdb  -o generator.o -c generator.c
</span><span class='line'>i686-apple-darwin11-gcc-4.2.1: error trying to <span class="nb">exec</span> <span class="s1">&#39;cc1&#39;</span>: execvp: No such file or directory
</span><span class='line'>make: *** <span class="o">[</span>generator.o<span class="o">]</span> Error 1
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Gem files will remain installed in /Users/gyo/.rbenv/versions/1.9.2-p320/gemsets/ruby-china/gems/json-1.7.5 <span class="k">for </span>inspection.
</span><span class='line'>Results logged to /Users/gyo/.rbenv/versions/1.9.2-p320/gemsets/ruby-china/gems/json-1.7.5/ext/json/ext/generator/gem_make.out
</span></code></pre></td></tr></table></div></figure>


<h2>解決</h2>

<ol>
<li>xcode で<code>Command Line Tools</code>をインストール</li>
<li><code>sudo ln -sf /usr/bin/llvm-gcc-4.2 /usr/bin/gcc-4.2</code>を実行</li>
</ol>


<hr />

<p>参考URL</p>

<ul>
<li><a href="http://stackoverflow.com/questions/11710568/os-x-10-8-error-trying-to-exec-usr-bin-i686-apple-darwin11-gcc-4-2-1-inst">OS X 10.8 - error trying to exec &#8216;/usr/bin/i686-apple-darwin11-gcc-4.2.1&#8217; - installing json gem</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[back to octopress]]></title>
    <link href="http://blueplanet.github.com/blog/2012/09/21/back-to-octopress/"/>
    <updated>2012-09-21T22:04:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/09/21/back-to-octopress</id>
    <content type="html"><![CDATA[<p>結構放置しちゃっていたBlogですが、Octopressを試して見たら、意外に、ソースコードもちゃんとできています。</p>

<p>原因はまだ良くわかってないのですが、それほどの手間をかかりたくないので、しばらくはOctopressに戻すようにします。</p>

<p>もともと<code>Jekyll</code>にする理由は、「いつでもどこでも気軽にブログを書きたい」と思ったのですが、まあ、実際には、そのレベルに至っていないし。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[はじめる！Cucumber写経　環境構築]]></title>
    <link href="http://blueplanet.github.com/blog/2012/06/04/cucumber/"/>
    <updated>2012-06-04T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/06/04/cucumber</id>
    <content type="html"><![CDATA[<p><a href="http://tatsu-zine.com/books/cuke">はじめる！Cucumber</a>は、分かった時点ですぐ購入しちゃったんですが、ずっと放置したままだった。最近<a href="http://bukt.org/events/31">Yokohamarb #20</a>に参加して、またテスト周りのお話しが出たので、Cucumberを勉強したくなった。</p>

<p>写経しないといけない為、環境構築しようと思ったが、ハマったことをメモ</p>

<h2>環境</h2>

<ul>
<li>cucumber 1.2.0</li>
<li>cucumber-rails 1.0.6</li>
<li>capybara 1.1.2</li>
<li>rails 3.2.3</li>
<li>guard 1.0.3</li>
<li>guard-cucumber 0.8.0</li>
<li>guard-spork 0.8.0</li>
<li>spork 0.9.2</li>
</ul>


<h3>web_steps.rbが生成されない</h3>

<ul>
<li><code>rails g cucumber:install ja --webrat --rspec</code>を実行しても、<code>features/step_definitions/web_steps.rb</code>と<code>features/support/paths.rb</code>は生成されてない</li>
<li>調べてみたら、<code>cucumber 1.1.0</code>から生成されないようになっている

<ul>
<li><a href="https://github.com/cucumber/cucumber-rails/blob/v1.1.0/History.md">cucumber-rails v1.1.0</a></li>
</ul>
</li>
<li>まあ、ちゃんと勉強してねという意味はわかって、頑張ろうと思ったが、やはりRailsも初心者だし、RSpecもよくわかってなくて、書こうと思っても全く進められない為、やめました。</li>
<li>結局は、<code>cucumber-rails 1.0.6</code>で写経するようにしました</li>
</ul>


<h3>本のバージョンとの違いによる箇所</h3>

<ul>
<li><code>Rails 3</code>からの変更なんですが、<code>rails g cucumber:**install**</code>のようになった</li>
<li><code>bundle</code>を使ってるので、<code>Gemfile</code>に記入する

<ul>
<li><code>gem 'cucumber-rails', '1.0.6', :require =&gt; false</code>のように書いている</li>
</ul>
</li>
</ul>


<h3>手順</h3>

<ul>
<li><code>rails new cucu -T --skip-bundle</code></li>
<li>Gemfileファイル編集</li>
</ul>


<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails&#39;</span><span class="p">,</span> <span class="s1">&#39;3.2.6&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sass-rails&#39;</span><span class="p">,</span>   <span class="s1">&#39;~&gt; 3.2.3&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;coffee-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.2.1&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;uglifier&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 1.0.3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;jquery-rails&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:develpment</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;database_cleaner&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;cucumber-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;1.0.6&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-cucumber&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-spork&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>bundle install --path vendor/bundle</code></li>
<li><code>bundle exec guard init cucumber</code></li>
<li><code>bundle exec guard init spork</code></li>
<li><code>bundle exec spork --bootstrap</code></li>
</ul>


<p>これで環境が出来た</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spork + GuardによるTDD]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/31/spork--guardtdd/"/>
    <updated>2012-05-31T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/31/spork&#8211;guardtdd</id>
    <content type="html"><![CDATA[<p><a href="http://bukt.org/events/31">Yokohamarb #20</a>に参加して、Railsの開発環境のお話しがありました。その中に、TDDツールについて、SporkとGuardが使われています。</p>

<p>Sporkはテストの事前ロードによりテストを高速化してくれるツールであるのは分かっていますが、Guardはわかっていなかったので、調べてみた</p>

<h2>Guard</h2>

<ul>
<li><code>Gemfile</code>を編集し、必要なgemを追加

<ul>
<li><code>gem guard-spork</code></li>
<li><code>gem guard-rspec</code></li>
</ul>
</li>
<li><code>bundle install</code>でインストール</li>
<li><code>bundle exec guard init spork</code></li>
<li><code>bundle exec guard init rspec</code></li>
<li><code>bundle exec guard</code>でプロセス起動すれば、<code>spork</code>＋<code>guard</code>が起動される</li>
</ul>


<p>これでテストの高速化かつ自動テスト環境が備えた</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[派遣社員の悲しみ]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/27/dispatch/"/>
    <updated>2012-05-27T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/27/dispatch</id>
    <content type="html"><![CDATA[<h2>前説</h2>

<ul>
<li>金曜日は月一回の帰社日で、１９時から帰社会議＋勉強会。おいらは勉強会の担当</li>
<li>今月は先週まで忙しくて、今週はやっと落ち着いてきた為、金曜日現場を休んで、午前中は家族サポート、午後帰社する予定</li>
<li>前日の夕方に緊急問い合わせが来て、金曜日対応しないと行けない為、出勤するようになった</li>
<li>１９時になっても解決策は見つかってないところ

<ul>
<li>現場から自社までは１時間ぐらいかかる為、１９時までに現場を出ないと、自社に着くのは２０時以降になり、行っても勉強会を行う余裕がなくなる</li>
</ul>
</li>
</ul>


<h2>本題</h2>

<ul>
<li>ペアでやってる方に、「帰社したいよ」と文句を言っちゃったところ、「そう言ったら怒られるよ」と言われた</li>
<li><strong>「優先順位として、現場＞家族（私用）＞帰社」じゃない？</strong> と</li>
<li>なるほど、みんなそう思ってるのか。というか、みんなかどうかは分からないけど</li>
<li>そもそも、<strong>私はそう思わない</strong></li>
</ul>


<h2>考え</h2>

<ul>
<li>「現場のお客さんは神様で、いつも現場を優先にしてください」のは☓

<ul>
<li>派遣社員の悲しみの１つは、帰社会議などの自社事務は、全部業務時間外（＝残業時間）になってること</li>
<li>なので、帰社会議・勉強会と現場の残業とは、僕にとっては、同じの残業だ

<ul>
<li>現場の残業：そもそも、不具合の調査・対応は、開発のコストじゃん、それらのなくなる日はないわけじゃん。期限があっても、期限までに、全ての不具合をなくせることは出来ないじゃん。なので、現場の残業は意味がないと思う</li>
<li>自社の残業：帰社会議や勉強会など、自社事業を進める為に頑張ってるわけですよね。</li>
<li>上記の言葉は、自社人材を育つよりは、現場の作業を優先にしてくださいとは同じ意味ですよね。それは本当にいいの？</li>
<li>自社のことを考えると、そうではない気がする。現場の作業は完了する日もないし、その為に自社の未来の為の努力をなくすのはダメだと思う</li>
</ul>
</li>
<li>なので、少なくとも、自社として、そう考えると、進歩がなく、未来がなくなり、ずっと今のままで行くようになってしまう</li>
</ul>
</li>
<li>最も基本的には、残業するのは☓

<ul>
<li>派遣社員であっても、１日２４時間全部現場に使うわけではないですよね？８時間の意味ですよね？</li>
<li>８時間を超えると、効率が低下してしまうことはあるよね？</li>
<li>残業時間をアピール人はいるらしいが、本人が残業しても効率が低下にならないと確信していればOKなんですが、僕の場合は、特に最近は、作業時間が８時間に超えると、効率・気持ちはすごく悪くなる為、８時間に限定したい</li>
</ul>
</li>
</ul>


<h2>現状</h2>

<ul>
<li>現場を調整する必要がある。</li>
<li>派遣をやめ、受注や自社サービスをやりたい</li>
<li>独立したい</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yokohamarb20]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/19/yokohamarb20/"/>
    <updated>2012-05-19T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/19/yokohamarb20</id>
    <content type="html"><![CDATA[<p>久しぶりにYokohamarbの勉強会に参加しました。</p>

<p>いつものどおり、自己紹介→Rubyレシピブック読書会→LTの流れ。</p>

<h2>自己紹介</h2>

<ul>
<li>希望として、話せるネタや「お寿司のネタ」　←これは盛り上がった！</li>
</ul>


<h2>Rubyレシピブック</h2>

<ul>
<li>本を持ってない＋目が弱くて、あんまり見えなかった</li>
<li>時間がちょっと経ってから、@1syo さんのすぐそばに移ってから、若干見えるようになった</li>
</ul>


<h2>LT1 Rails Conf2012</h2>

<ul>
<li>github:newhavenrb</li>
<li>トレンド

<ul>
<li>分散処理：MBQ</li>
<li>JavaScriptのお話し</li>
<li>テストなどは既に当たり前になってるので、意外にトレンドに乗れなかった</li>
</ul>
</li>
<li>Chanko ?

<ul>
<li>初めて聞いたので、後で調べる</li>
</ul>
</li>
<li>後半は写真を見ながら説明していただいた

<ul>
<li>料理はまずかったそうです。</li>
</ul>
</li>
</ul>


<h2>LT2 Rails開発環境</h2>

<ul>
<li>MacOS Vim Screen Git</li>
<li>Test 「これらのgemがないと、開発は進められない」

<ul>
<li>RSpec</li>
<li>Cucumber</li>
<li>Pry</li>
<li>guard</li>
</ul>
</li>
<li>gitの便利設定</li>
<li>Demo</li>
</ul>


<h2>LT3 Ruby Motion</h2>

<ul>
<li>Docはまだ最低限だけ</li>
<li>Motionコマンドで作業</li>
<li>specサブコマンドがある。

<ul>
<li>ただし、どのインスタンスがあるかどうか・メソッドが呼ば出されるかどうかなどで確認できるが、UIの自動テストはできないので、UIAutoMationを使わないと無理っぽい</li>
</ul>
</li>
<li>名前付きパラメータが使えるように拡張される

<ul>
<li>ただ、拡張の部分はアプリに配布されないそうです</li>
</ul>
</li>
<li>変数の型は無視していい。</li>
<li>Viewのデバッグ操作が出来て、より使いやすくなる</li>
</ul>


<h2>LT4 Haskell言語</h2>

<ul>
<li>Web Framework

<ul>
<li><a href="http://www.yesodweb.com/"></a></li>
<li>PFM</li>
<li>セキュリティ</li>
<li>Routeを定義して保存すると、コンパイルされる</li>
</ul>
</li>
<li>Haskell

<ul>
<li>コンパイル時メソッドなどを生成するので、実行PFMがいい</li>
</ul>
</li>
<li><p>この辺は全く分からないので、後で調べる</p></li>
<li><p>TODO : Emacs で階層を色付けするのは？</p></li>
<li>TODO : Emacs で折り畳み・展開</li>
<li>TODO : cdの後自動的にlsを実行数するのは？</li>
<li>TODO : Parse.com ??

<ul>
<li>プロトタイプ作成の補助？</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GTDアプリ再考]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/17/gtd/"/>
    <updated>2012-05-17T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/17/gtd</id>
    <content type="html"><![CDATA[<p>やりたいことを管理するのは下手で、最近も忘れてしまったことがいくつあったことに気づいて、改めてGTDアプリを調べてみた</p>

<h2>ニーズ</h2>

<ul>
<li>GTD周り

<ul>
<li>タスク：内容、期限があればOK</li>
<li>コンテキストが必須</li>
<li>プロジェクトが必須</li>
</ul>
</li>
<li>マルチプラットフォーム

<ul>
<li>iPhone</li>
<li>WEB(Mac OS, Win)</li>
</ul>
</li>
</ul>


<h2>アプリ調べ</h2>

<ul>
<li>GoTasks：シンプルで好きですが、コンテキストがないので却下</li>
<li>Wunderlist：コンテキストがないので却下</li>
<li>EgretList：Evernoteと同期できるが、Evernoteでのタスク管理は面倒なので却下

<ul>
<li>１つノートをプロジェクトとして、複数タスクを入れようとすると、タスク毎に期限・コンテキストの設定は出来ない</li>
<li>１つタスク＝１つノートにすると、多くなる一方、期限などの情報はEvernoteで確認・編集出来ない為、不便</li>
</ul>
</li>
<li>doit.im：ニーズは全部満たすので、しばらく使う

<ul>
<li>コンテキスト・プロジェクトあり</li>
<li>iPhoneアプリがあり、無料</li>
<li>WEBサイトがあり</li>
<li>不満のところ

<ul>
<li>アプリの項目がちょっと多い</li>
<li>コンテキストの切り替えは３ステップが必要、ちょっと面倒</li>
</ul>
</li>
</ul>
</li>
<li>Appigo TODO：ニーズは全部満たすので、しばらく使う

<ul>
<li>コンテキスト・プロジェクトあり</li>
<li>iPhoneアプリがあり、前購入した</li>
<li>toodledoと同期できる為、toodledoのサイトで編集できる</li>
<li>不満のところ

<ul>
<li>アプリの項目がちょっと多い</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>以上</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bundler改めて調べてみた]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/16/bundler/"/>
    <updated>2012-05-16T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/16/bundler</id>
    <content type="html"><![CDATA[<p><code>Bundler</code>の使い方について、今までは使っていますが、細かくは分かっていなかった。<code>RVM</code>と<code>rbenv</code>との比較を調べた時、<code>rbenv</code>+<code>bundler</code>でgemを管理するのは十分という記事があったので、改めて<code>bundler</code>を調べてみた。</p>

<h2>基本</h2>

<ul>
<li>Gemfileに必要なGemを記入した上で、<code>bundle install</code>でインストール

<ul>
<li>デフォルトはシステムの<code>ruby/gems</code>にインストール</li>
<li><code>bundle install --path vendor/bundle</code>でインストールパス指定できる</li>
<li>一度指定すれば、その後<code>bundle install</code>でも前回のパスにインストール</li>
</ul>
</li>
<li><code>bundle update</code>で更新</li>
<li><code>bundle exec</code>で<code>bundle</code>よりインストールした<code>gem</code>コマンドを実行する</li>
</ul>


<h2>gem管理のルールの考え</h2>

<ul>
<li>共通で使うgemは、普通に<code>gem install ...</code>でシステムにインストール

<ul>
<li>bundle自体</li>
<li>その他</li>
</ul>
</li>
<li>プロジェクト毎に、<code>bundle install --path ...</code>でプロジェクト配下にインストール

<ul>
<li><code>bundle exec ...</code>でプロジェクトのコマンドを実行する</li>
</ul>
</li>
</ul>


<h2>問題点</h2>

<ul>
<li><code>zsh</code>を使ってるので、コマンドの補完はいろいろお世話になってます。例え、<code>rake</code>を入力すると、実行できるタスクが補完してくれる。<code>bundle exec rake</code>だと、当たり前だけど、補完がしてくれなくなってしまう

<ul>
<li><code>bundle exec</code>を省略してコマンドを実行できるという記事はいろいろありますが、自動補完に関する解決方法はなさそう</li>
</ul>
</li>
</ul>


<p>TODO : zshで<code>bundle exec</code>より実行するコマンドの自動補完</p>

<h2>Link</h2>

<ul>
<li><a href="">http://ttcloud.net/rails/20110710/1439</a></li>
<li><a href="">http://rails3try.blogspot.jp/2011/06/rails3-bundlergem.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HerokuでのCronについて調べてみた]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/14/heroku-cron/"/>
    <updated>2012-05-14T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/14/heroku-cron</id>
    <content type="html"><![CDATA[<p>Herokuの場合は、無料のCronは１日１回しか使えないイメージがある。現状はどうなっているかを調べてみた</p>

<h2>現状</h2>

<ul>
<li>Cronは既に古い</li>
<li><p>Heroku SchedulerはCronの代替案としてのものらしく、時間毎・１０分間隔でタスクを実行できる。</p>

<ul>
<li><a href="">http://blogjp.sforce.com/2011/11/heroku-schedule-dc69.html</a></li>
</ul>
</li>
<li><p>clockworkは秒単位まで指定できる</p>

<ul>
<li><a href="">http://d.hatena.ne.jp/marutanm/20110719/p1</a></li>
</ul>
</li>
</ul>


<h2>料金</h2>

<ul>
<li>Heroku Schedulerは、プロセスが起動され、実行中はDynoの時間が計上される。例え、10:00起動され、10:06まで実行完了の場合は、Dynoの時間は0.1となるイメージ。

<ul>
<li>最初は料金の計上を理解出来てなくて、<code>one-off admin process</code>で調べてみたら、下記の記事のお陰で、理解出来ました

<ul>
<li><a href="">http://d.hatena.ne.jp/koshigoeb/20111112/1321070001</a></li>
</ul>
</li>
</ul>
</li>
<li>clockworkは、裏側でプロセスが動いているので、ずっとDynoの時間が計上される</li>
</ul>


<h2>使い分け</h2>

<ul>
<li><p><a href="">http://d.hatena.ne.jp/ToMmY/20111121/1321802014</a> を参考に</p>

<ul>
<li>他のアプリケーションの補佐として、軽い処理の場合は、Scheduler</li>
<li>頻繁の処理（１０分以下）、または、ガッツリしたい処理は、clockwork</li>
<li>Schedulerは毎回プロセスが再起動される為、オーバーヘッドが大きい</li>
</ul>
</li>
<li><p>自分なりの予想</p>

<ol>
<li>１つサービスでRailsアプリを運用し、DBは別にする</li>
<li>もう１つサービスでclockworkを運用し、１のDBにアクセスする</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll Markdownでのコードブロック]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/13/jekyll-markdown/"/>
    <updated>2012-05-13T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/13/jekyll-markdown</id>
    <content type="html"><![CDATA[<p>Jekyllでのソースの書き方の問題はずっと解決出来てない状態。</p>

<p>今日わかったのは、４つのスペースでインデントを付けると、色はないけど、ちゃんとそのまま表現される</p>

<div class="highlight"><pre><code class="python"><span class="lineno">1</span> <span class="k">def</span> <span class="nf">test</span>
<span class="lineno">2</span>   <span class="n">aaa</span> <span class="o">=</span> <span class="s">&quot;aaa&quot;</span>
<span class="lineno">3</span> <span class="n">end</span>
</code></pre>
</div>


<p>これは、Markdownで前後とも一行の空白行があるわけ。ないとこの３行が１行になってしまう。前の行末に２つのスペースを入れると、改行はされますが、やはり１行になってしまう。</p>

<pre><code>def test
  aaa = "aaa"
end
</code></pre>

<p>とりあえずは、これで行きます。</p>

<p>TODO : Markdownのソースブロックの色</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyでTwitter APIを使う]]></title>
    <link href="http://blueplanet.github.com/blog/2012/05/12/rubytwitter/"/>
    <updated>2012-05-12T00:00:00+09:00</updated>
    <id>http://blueplanet.github.com/blog/2012/05/12/rubytwitter</id>
    <content type="html"><![CDATA[<p>RailsでTwitterを使いたいので、まずは、RubyでTwitterを使う手段を調べてみた</p>

<ul>
<li><code>gem install twitter</code> Rubyの場合は、これがよく使われるらしい</li>
</ul>


<p>パブリックタイムラインの場合、認証なくてもOK</p>

<pre><code>require 'twitter'

Twitter.user_timeline("aoi_wakusei", :count =&gt; 200).map do |tweet|
  "#{tweet.created_at} : #{tweet.text}"
end
</code></pre>

<p>確かにこんなに簡単に使えるのは感動したが、期間を指定したいが、使い方はまだ見つけていない</p>

<p>TODO : Twitter API期間指定してタイムライン検索</p>
]]></content>
  </entry>
  
</feed>
